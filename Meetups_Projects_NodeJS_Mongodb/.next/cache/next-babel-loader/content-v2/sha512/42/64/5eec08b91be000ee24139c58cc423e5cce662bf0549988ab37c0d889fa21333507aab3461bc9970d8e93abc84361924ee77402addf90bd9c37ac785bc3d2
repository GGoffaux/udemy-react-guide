{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { MongoClient, ObjectId } from \"mongodb\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\nimport Head from \"next/head\";\nimport { Fragment } from \"react\";\n\nfunction MeetupDetails(props) {\n  return /*#__PURE__*/_jsxs(Fragment, {\n    children: [/*#__PURE__*/_jsxs(Head, {\n      children: [/*#__PURE__*/_jsxs(\"title\", {\n        children: [\" \", props.meetupData.title, \" \"]\n      }), /*#__PURE__*/_jsx(\"meta\", {\n        name: \"description\",\n        content: props.meetupData.description\n      })]\n    }), /*#__PURE__*/_jsx(MeetupDetail, {\n      image: props.meetupData.image,\n      title: props.meetupData.title,\n      address: props.meetupData.address,\n      description: props.meetupData.description\n    })]\n  });\n}\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect(\"mongodb+srv://ggoffaux:Equ!nox3s@cluster0.aysla.mongodb.net/meetups?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n  const meetups = await meetupsCollection.find({}, {\n    _id: 1\n  }).toArray();\n  client.close();\n  return {\n    fallback: 'blocking',\n    paths: meetups.map(meetup => ({\n      params: {\n        meetupId: meetup._id.toString()\n      }\n    }))\n  };\n}\n;\nexport async function getStaticProps(context) {\n  // fectch data for a single meetup\n  const meetupId = context.params.meetupId;\n  console.log(meetupId);\n  const client = await MongoClient.connect(\"mongodb+srv://ggoffaux:Equ!nox3s@cluster0.aysla.mongodb.net/meetups?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n  const selectedMeetup = await meetupsCollection.findOne({\n    _id: ObjectId(meetupId)\n  });\n  client.close();\n  return {\n    props: {\n      meetupData: {\n        id: selectedMeetup._id.toString(),\n        title: selectedMeetup.title,\n        address: selectedMeetup.address,\n        image: selectedMeetup.image,\n        description: selectedMeetup.description\n      }\n    }\n  };\n}\n;\nexport default MeetupDetails; // return {\n//   props: {\n//       meetupData: {\n//         image:\"https://upload.wikimedia.org/wikipedia/commons/8/8f/070204_%2890%29_Mons.JPG\" ,\n//         id: meetupId, \n//         title:\"A first Metup\" ,\n//         address:\"Some Street 5, some City\" ,\n//         description:\"This is a first meetup\" ,\n//       }\n//   }\n// };","map":null,"metadata":{},"sourceType":"module"}